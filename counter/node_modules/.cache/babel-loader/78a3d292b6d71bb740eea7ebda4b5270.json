{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msi\\\\Desktop\\\\react\\\\counter\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n\n    this.handleIncrement = product => {\n      console.log(product);\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.doHandleIncrement = () => {\n      this.handleIncrement({\n        id: 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hiiii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.doHandleIncrement(),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }, this) : count;\n  }\n\n}\n\nexport default Counter; // class Counter extends Component {\n//   state = {\n//     tags: [\"tag1\", \"tag2\", \"tag3\", \"tag4\"],\n//   };\n//   // renderTags() {\n//   //   return <>\n//   //   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n//   //   {/* <button onClick={() => {\n//   //     const shiftTag = Array.from(this.state.tags);\n//   //     shiftTag.shift();\n//   //     this.setState(s => ({...this.state, tags: shiftTag }))\n//   //   }}>shift!</button>\n//   //       <button onClick={() => {\n//   //     const reverseTag = Array.from(this.state.tags);\n//   //     reverseTag.reverse();\n//   //     this.setState(s => ({...this.state, tags: reverseTag }))\n//   //   }}>reverse!</button> */}\n//   //   </>\n//   // }\n//   render() {\n//     return {\n//       <Fragment>\n//          <span {className={this.getBadgeClasses()}}>{this.formatCount()}</span>\n//       </Fragment>\n//     };\n//   }\n//   // getBadgeClasses() {\n//   //   let classes = \"badge m-2 badge-\";\n//   //   classes += this.state.count === 0 ? \"warning\" : \"primary\";\n//   //   return classes;\n//   // }\n//   formatCount() {\n//     const { count } = this.state;\n//     return count === 0 ? <h1>Zero</h1> : count;\n//   }\n// }\n// export default Counter;\n// // export default function Counter() {\n// //   const [counts, setCounts] = useState(0);\n// //   return (\n// //     <>\n// //       <p>{counts}</p>\n// //       <button onClick={() => setCounts((c) => c + 10)}>Click me!</button>\n// //     </>\n// //   );\n// // }","map":{"version":3,"names":["React","Component","Fragment","Counter","state","count","handleIncrement","product","console","log","setState","doHandleIncrement","id","render","getBadgeClasses","formatCount"],"sources":["C:/Users/msi/Desktop/react/counter/src/components/counter.jsx"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nclass Counter extends Component {\r\n  state = {  \r\n    count: 0\r\n  };\r\n  handleIncrement = (product) => {\r\n    console.log(product);\r\n    this.setState({count:this.state.count +1});\r\n\r\n  };\r\n  doHandleIncrement = () => {\r\n    this.handleIncrement({ id: 1})\r\n\r\n\r\n  };\r\n  render() { \r\n    return (\r\n      <>\r\n      <h1>hiiii</h1>\r\n      <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n      <button\r\n      onClick={this.doHandleIncrement()}\r\n      className=\"btn btn-secondary btn-sm\"\r\n      >\r\n        Increment\r\n\r\n      </button>\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      </>\r\n    );\r\n  };\r\n\r\n \r\n  formatCount() {\r\n    const { count } = this.state;\r\n   \r\n    return count === 0 ? <h1>Zero</h1> : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Counter extends Component {\r\n//   state = {\r\n//     tags: [\"tag1\", \"tag2\", \"tag3\", \"tag4\"],\r\n//   };\r\n//   // renderTags() {\r\n//   //   return <>\r\n//   //   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\r\n\r\n//   //   {/* <button onClick={() => {\r\n//   //     const shiftTag = Array.from(this.state.tags);\r\n//   //     shiftTag.shift();\r\n//   //     this.setState(s => ({...this.state, tags: shiftTag }))\r\n//   //   }}>shift!</button>\r\n//   //       <button onClick={() => {\r\n//   //     const reverseTag = Array.from(this.state.tags);\r\n//   //     reverseTag.reverse();\r\n//   //     this.setState(s => ({...this.state, tags: reverseTag }))\r\n//   //   }}>reverse!</button> */}\r\n//   //   </>\r\n\r\n//   // }\r\n\r\n//   render() {\r\n//     return {\r\n//       <Fragment>\r\n//          <span {className={this.getBadgeClasses()}}>{this.formatCount()}</span>\r\n//       </Fragment>\r\n\r\n\r\n\r\n\r\n\r\n//     };\r\n//   }\r\n//   // getBadgeClasses() {\r\n//   //   let classes = \"badge m-2 badge-\";\r\n//   //   classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n//   //   return classes;\r\n//   // }\r\n//   formatCount() {\r\n//     const { count } = this.state;\r\n   \r\n//     return count === 0 ? <h1>Zero</h1> : count;\r\n//   }\r\n// }\r\n\r\n// export default Counter;\r\n// // export default function Counter() {\r\n// //   const [counts, setCounts] = useState(0);\r\n\r\n// //   return (\r\n// //     <>\r\n// //       <p>{counts}</p>\r\n// //       <button onClick={() => setCounts((c) => c + 10)}>Click me!</button>\r\n// //     </>\r\n// //   );\r\n// // }\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;EAAA;IAAA;IAAA,KAC9BG,KAD8B,GACtB;MACNC,KAAK,EAAE;IADD,CADsB;;IAAA,KAI9BC,eAJ8B,GAIXC,OAAD,IAAa;MAC7BC,OAAO,CAACC,GAAR,CAAYF,OAAZ;MACA,KAAKG,QAAL,CAAc;QAACL,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,GAAkB;MAAzB,CAAd;IAED,CAR6B;;IAAA,KAS9BM,iBAT8B,GASV,MAAM;MACxB,KAAKL,eAAL,CAAqB;QAAEM,EAAE,EAAE;MAAN,CAArB;IAGD,CAb6B;EAAA;;EAc9BC,MAAM,GAAG;IACP,oBACE;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAM,SAAS,EAAE,KAAKC,eAAL,EAAjB;QAAA,UAA0C,KAAKC,WAAL;MAA1C;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QACA,OAAO,EAAE,KAAKJ,iBAAL,EADT;QAEA,SAAS,EAAC,0BAFV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA,gBADF;EAkBD;;EAGDI,WAAW,GAAG;IACZ,MAAM;MAAEV;IAAF,IAAY,KAAKD,KAAvB;IAEA,OAAOC,KAAK,KAAK,CAAV,gBAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAd,GAA8BA,KAArC;EACD;;AAxC6B;;AA2ChC,eAAeF,OAAf,C,CA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}