{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msi\\\\Desktop\\\\react\\\\counter\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counterComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  render() {\n    const {\n      onReset,\n      counters,\n      onDelete,\n      onIncrement\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        className: \"btn btn-primary btn-sm m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        // bubbling up the event to the Parent App via inclusion of the props references to each of these events in App\n        onDelete: onDelete,\n        onIncrement: onIncrement,\n        counter: counter // value={counter.value}\n        // id={counter.id}\n\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"names":["React","Component","Counter","Counters","render","onReset","counters","onDelete","onIncrement","props","map","counter","id"],"sources":["C:/Users/msi/Desktop/react/counter/src/components/counters.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Counter from \"./counterComponent\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const { onReset, counters, onDelete, onIncrement } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        {/* Another reference to the props that are pass from App */}\r\n        {counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            // bubbling up the event to the Parent App via inclusion of the props references to each of these events in App\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n            // value={counter.value}\r\n            // id={counter.id}\r\n          >\r\n            {/* <h4>Counter # {counter.id}</h4> */}\r\n            {/* The handleDelete method is passed as a \"props\" so it can be access by the Counter component. */}\r\n            {/* The key attribute is used internally by React - so we won't be able to access it in our component - thus the additional id prop */}\r\n            {/* instead of passing the value and id properties - we can use the counter object itself */}\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;EAC/BG,MAAM,GAAG;IACP,MAAM;MAAEC,OAAF;MAAWC,QAAX;MAAqBC,QAArB;MAA+BC;IAA/B,IAA+C,KAAKC,KAA1D;IACA,oBACE;MAAA,wBACE;QAAQ,OAAO,EAAEJ,OAAjB;QAA0B,SAAS,EAAC,4BAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAKGC,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBACnB,QAAC,OAAD;QAEE;QACA,QAAQ,EAAEJ,QAHZ;QAIE,WAAW,EAAEC,WAJf;QAKE,OAAO,EAAEG,OALX,CAME;QACA;;MAPF,GACOA,OAAO,CAACC,EADf;QAAA;QAAA;QAAA;MAAA,QADD,CALH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAwBD;;AA3B8B;;AA8BjC,eAAeT,QAAf"},"metadata":{},"sourceType":"module"}